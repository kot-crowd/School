/*
  - Протокол git не позволяет скачивать части репозитория. Пакетный менеджер в go серьёзно изменили для такой возможности
  - Для дураков. Нет нельзя, правильно?
  - Через протокол git - нельзя, если только не заморочиться и не посмотреть как сделан пакетный менеджер. Но если этот репозиторий лежит на github или gitlab или неважно где,
    где есть доступ с браузера, то его скачать можно, нужно только изучить API этого сайта
    Ещё можно сделать хитрожопость, в темповый каталог склонировать весь репозиторий, вытащить оттуда необходимый файл, а репозиторий удалить
*/
package main

import (
	"bufio"   // Пакет для считывания данных
	"fmt"     // Пакет для вывода
	"io"      // Пакет для работы с файлами
	"strings" // Пакет для работы со строкой "Split"

	//"encoding/csv" // Пакет для работы с csv
	"os" // Пакет для работы с файлами
	//"https://github.com/semyon-dev/stepik-go/blob/master/work_with_files/task_sep_1/task.data"
)

func main() {
	const root = "./task.data"     // Путь к файлу
	fileDate, err := os.Open(root) // Открываем файл
	//Обрабатываем возможную ошибку при открытии
	if err != nil {
		panic(err)
	}
	defer fileDate.Close()                                // Отложенное закрытие файла
	rd, err := bufio.NewReader(fileDate).ReadString('\n') // Заполняем rd содержимым файла
	//Обрабатываем возможную ошибку при наполнении rd
	if err != nil && err != io.EOF {
		panic(err)
	}
	/* *********Вариант для incoding/csv**********
		s := csv.NewReader(rd)
	s.Comma = ';'
	record, err := s.Read()*/
	/*****************************************/
	record := strings.Split(rd, ";") // Получаем массив по признаку ";"
	for num, item := range record {  // Перебор элементов и индексов массива record
		if item == "0" { // Проверка элемента массива на "0"
			fmt.Println(num + 1) // Вывод номера массива при выполнении условия
			break                // Остановка выполнения массива при выполнении условия
		} // Закрываем условие
	} // Закрываем цикл
}
